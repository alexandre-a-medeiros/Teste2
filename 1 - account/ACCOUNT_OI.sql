
SPOOL ACCOUNT_OI.LOG

SET SERVEROUTPUT ON;
SET TIME ON;
SET TIMING ON;

ALTER SESSION ENABLE PARALLEL DML;
ALTER SESSION ENABLE PARALLEL QUERY;

EXEC DBMS_OUTPUT.PUT_LINE(TO_CHAR(SYSDATE,'DD-MM-YYYY HH24:MI:SS')||'- INICIO');

DECLARE
	count_tbl						INTEGER;
	tbl_aux VARCHAR2(30);
BEGIN
/*PASSO 1: CRIAR TABELAS AUXILIARES COM ACCOUNT IG CRM*/
	tbl_aux := 'ACCOUNT_AUX_O';

	SELECT COUNT(*) INTO COUNT_TBL FROM ALL_TABLES WHERE TABLE_NAME = TBL_AUX AND OWNER = 'APP_STGOWN';
	
	IF count_tbl = 0 THEN
		EXECUTE IMMEDIATE 'CREATE TABLE '||tbl_aux||' NOLOGGING COMPRESS
		                   AS SELECT * FROM APP_RELOWN.ACCOUNT WHERE ROWNUM < 0';
	ELSE
		EXECUTE IMMEDIATE 'DROP TABLE '|| tbl_aux;
		
		EXECUTE IMMEDIATE 'CREATE TABLE '||tbl_aux||' NOLOGGING COMPRESS
		                   AS SELECT * FROM APP_RELOWN.ACCOUNT WHERE ROWNUM < 0';
	END IF;
	

END;
/

EXEC DBMS_OUTPUT.PUT_LINE('TERMINO DO PROCESSO DE CRIAÇÃO DE TABELAS TEMPORARIAS');

EXEC DBMS_OUTPUT.PUT_LINE('INICIO DA CARGA DA TABELA ACCOUNT_AUX_O');

INSERT /*+ APPEND */INTO APP_STGOWN.ACCOUNT_AUX_O
SELECT /*+ PARALLEL(stg,16) PARALLEL(bll,16)*/
                'O' AS PARTITION_KEY,
		APP_RELOWN.SEQ_SRK_ACCOUNT.NEXTVAL,
		stg.CLI_COD,											-- 5 CODACTCRM
		CASE 
			WHEN stg.CLI_TIPOPESSOA=1 THEN 'C'
			WHEN stg.CLI_TIPOPESSOA=2 THEN 'B'
			ELSE NULL
		END,													-- 6 BUSTYP
		TO_DATE(stg.CLI_DATCADALT,'YYYYMMDDHH24MISS'),			-- 7 DTEUPDACT
		TO_DATE(stg.CLI_DATACAD,'YYYYMMDDHH24MISS'),			-- 8 DTECREACT
		stg.CLI_LOGIN, 											-- 9 EMAACT
		CASE
			WHEN STG.CLI_TIPOPESSOA = 2 THEN SUBSTR(TRIM(STG.CLI_CONTATO), 1, DECODE(INSTR(TRIM(STG.CLI_CONTATO), ' '), 0, LENGTH(TRIM(STG.CLI_CONTATO)), INSTR(TRIM(STG.CLI_CONTATO), ' ')))
			ELSE                             SUBSTR(TRIM(STG.CLI_NOME), 1, DECODE(INSTR(TRIM(STG.CLI_NOME), ' '), 0, LENGTH(TRIM(STG.CLI_NOME)), INSTR(TRIM(STG.CLI_NOME), ' ')))
		END,  													-- 10 FIRSTNAM
		NULL,													-- 11 MIDNAM
		CASE
			WHEN STG.CLI_TIPOPESSOA = 2 THEN SUBSTR(TRIM(STG.CLI_CONTATO), INSTR(TRIM(STG.CLI_CONTATO), ' ') +1, DECODE(INSTR(TRIM(STG.CLI_CONTATO), ' '), 0, 0, LENGTH(TRIM(STG.CLI_CONTATO)) - INSTR(TRIM(STG.CLI_CONTATO), ' ')))
			ELSE                             SUBSTR(TRIM(STG.CLI_NOME), INSTR(TRIM(STG.CLI_NOME), ' ') +1, DECODE(INSTR(TRIM(STG.CLI_NOME), ' '), 0, 0, LENGTH(TRIM(STG.CLI_NOME)) - INSTR(TRIM(STG.CLI_NOME), ' ')))
		END,   													-- 12 LASTNAM
		' ', 													-- 13 SAL
		CASE 
			WHEN stg.CLI_TIPOPESSOA =  2 THEN stg.CLI_NOME
			ELSE NULL     
		END,													-- 14 COMPNAM
		stg.CLI_CPF,											-- 15 CPFCNPJ
		bll.cli_contab_insc_municipal,							-- 16 MUNAPP
		bll.cli_contab_insc_estadual,							-- 17 STTAPP
		Null,													-- 18 SEGACT
		stg.CLI_EMAIL, 											-- 19 EMAALT
		'A',													-- 20 CODACTSTEBRM
		'OI-' || stg.CLI_COD,									-- 21 CODACTBRM
		bll.cli_cod,											-- 22 CODACTBLL
		2,														-- 23 CODHOSTCRM
		CASE 
         	WHEN BLL.CLI_COD IS NOT NULL THEN 7
         	ELSE NULL
    	END,													-- 24 CODHOSTBLL
		CASE 
         	WHEN UPPER(stg.CLI_NOME) = 'FULANO DE TAL'
              OR UPPER(stg.CLI_EMAIL) LIKE 'TESTEPRODUTO%'
              OR UPPER(stg.CLI_NOME) LIKE 'TESTEPRODUTO%'
              OR UPPER(stg.Cli_Login) LIKE 'TESTEPRODUTO%' THEN 1
         	ELSE 0
   	 	END    	   ,											-- 25 FLGTST
		TO_DATE(STG.CLI_DATNAS,'DD/MM/YYYY'),					-- 26 BIRTHDAY_T
		NULL,													-- 27 BROADBAND_FLAG
		NULL,													-- 28 CHILDREN_COUNT
		DECODE(stg.CLI_SEXO,'F',1,'M',2,NULL),					-- 29 GENDER
		stg.CLI_MRSCODE,										-- 30 MARITAL_STATUS
		CASE WHEN stg.CLI_TIPOPESSOA = 2
			THEN stg.CLI_CONTATO
			ELSE NULL 
		END ,													-- 31 PJ_NAME
		NULL,													-- 32 PPZ_LOGIN
		stg.CLI_EDLCODE,										-- 33 SCHOLARITY
		NULL,													-- 34 SECRET_ANSWER
		NULL,  		 											-- 35 SECRET_QUESTION	   	 					  
		'I',													-- 36 OPERACAO
		NULL													-- 37 CD_EXEC
		,SYSDATE AS INSDTE
        ,NULL AS UPDDTE
	FROM	
	APP_STGOWN.O_CRM_CLIENTE stg	
	LEFT JOIN APP_STGOWN.BO_CRM_CLIENTE BLL
	ON BLL.CLI_IGCODE = TO_CHAR(STG.CLI_COD);

COMMIT;

/* DAR GRANT */
GRANT ALL ON ACCOUNT_AUX_O TO APP_RELOWN;

EXEC DBMS_OUTPUT.PUT_LINE('INICIO DA CARGA DA TABELA ACCOUNT BASEADO NA ACCOUNT_AUX_O');

DECLARE
   C_OWNER                        CONSTANT ALL_TABLES.OWNER%TYPE := 'APP_STGOWN';
   C_TABLE_NAME                   CONSTANT ALL_TABLES.TABLE_NAME%TYPE := 'ACCOUNT_CODHOSTBLL7_AUX_O';
   C_COMMAND_DROP                 CONSTANT VARCHAR2(100) := 'DROP TABLE '||C_OWNER||'.'||C_TABLE_NAME;
   E_TABLE_NOT_EXIST              EXCEPTION;
   PRAGMA EXCEPTION_INIT(E_TABLE_NOT_EXIST,-942);
BEGIN
   EXECUTE IMMEDIATE C_COMMAND_DROP;
EXCEPTION
   WHEN E_TABLE_NOT_EXIST THEN
      NULL;
END;
/

CREATE TABLE APP_STGOWN.ACCOUNT_CODHOSTBLL7_AUX_O(
   CODACTBLL       NUMBER)
   TABLESPACE TSD_MIGDW;

INSERT /*+ APPEND */INTO APP_STGOWN.ACCOUNT_CODHOSTBLL7_AUX_O
   SELECT /*+ PARALLEL(AUX,20)*/ AUX.CODACTBLL
      FROM APP_STGOWN.ACCOUNT_AUX_O AUX
      WHERE AUX.CODHOSTBLL = 7;

COMMIT;

EXEC DBMS_STATS.GATHER_TABLE_STATS('APP_STGOWN','ACCOUNT_CODHOSTBLL7_AUX_O');

ALTER TABLE APP_RELOWN.ACCOUNT
  EXCHANGE PARTITION ACCOUNT_O
  WITH TABLE APP_STGOWN.ACCOUNT_AUX_O
  WITHOUT VALIDATION;

EXEC DBMS_OUTPUT.PUT_LINE('INICIO DA CARGA DA TABELA ACCOUNT COM DADOS DE BILL ');

/* INSERE REGISTROS DO BRT BILLING NA ACCOUNT*/
INSERT /*+ APPEND */INTO APP_RELOWN.ACCOUNT
SELECT /*+ PARALLEL(bll,16) PARALLEL(AUX,16) */
                'O' AS PARTITION_KEY,
		APP_RELOWN.SEQ_SRK_ACCOUNT.NEXTVAL,			  
		NULL,													-- 5 CODACTCRM
		NULL,													-- 6 BUSTYP
		NULL,													-- 7 DTEUPDACT
		NULL,													-- 8 DTECREACT
		NULL,													-- 9 EMAACT
		NULL, 													-- 10 FIRSTNAM
		NULL,													-- 11 MIDNAM
		NULL,													-- 12 LASTNAM
		NULL,													-- 13 SAL
		NULL,													-- 14 COMPNAM
		NULL,													-- 15 CPFCNPJ
		bll.cli_contab_insc_municipal,							-- 16 MUNAPP
		bll.cli_contab_insc_estadual,							-- 17 STTAPP
		Null,													-- 18 SEGACT
		Null,													-- 19 EMAALT
		Null,													-- 20 CODACTSTEBRM
		Null, 													-- 21 CODACTBRM
	  	bll.cli_cod,											-- 22 CODACTBLL
		Null, 													-- 23 CODHOSTCRM 
		7 CODHOSTBLL,											-- 24 CODHOSTBLL
		CASE 
         WHEN UPPER(bll.CLI_NOME) = 'FULANO DE TAL'
              OR UPPER(bll.CLI_EMAIL) LIKE 'TESTEPRODUTO%'
              OR UPPER(bll.CLI_NOME) LIKE 'TESTEPRODUTO%'
              OR UPPER(bll.Cli_Login) LIKE 'TESTEPRODUTO%' THEN 1
         ELSE 0
   		END FLGTST,												-- 25 FLGTST
		NULL,													-- 26 BIRTHDAY_T
		NULL,													-- 27 BROADBAND_FLAG
		NULL,													-- 28 CHILDREN_COUNT
		NULL,													-- 29 GENDER
		NULL,													-- 30 MARITAL_STATUS
		NULL,													-- 31 PJ_NAME
		NULL,													-- 32 PPZ_LOGIN
		NULL,													-- 33 SCHOLARITY
		NULL,													-- 34 SECRET_ANSWER	
		NULL, 													-- 35 SECRET_QUESTION
		'I',													-- 36 OPERACAO
		NULL													-- 37 CD_EXEC
		,SYSDATE AS INSDTE
        ,NULL AS UPDDTE
	FROM
	APP_STGOWN.BO_CRM_CLIENTE bll,
	APP_STGOWN.ACCOUNT_CODHOSTBLL7_AUX_O AUX
  WHERE
     BLL.CLI_COD = AUX.CODACTBLL(+) AND
     AUX.CODACTBLL IS NULL;

COMMIT;

EXEC DBMS_OUTPUT.PUT_LINE(TO_CHAR(SYSDATE,'DD-MM-YYYY HH24:MI:SS')||'- TERMINO');

SPOOL OFF;
EXIT;
/